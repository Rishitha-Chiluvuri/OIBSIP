package Package;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

public class OnlineReservationSystem {
    // JDBC driver and database URL
    static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://localhost/mydb";

    // Database credentials
    static final String USERNAME = "root";
    static final String PASSWORD = "root";

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Login Form
        System.out.print("Enter your login ID: ");
        String loginId = scanner.nextLine();

        System.out.print("Enter your password: ");
        String password = scanner.nextLine();

        if (authenticateUser(loginId, password)) {
            System.out.println("Login successful!");
            // Proceed to reservation system
         // Prompt the user for reservation or cancellation
            System.out.println("Select an option:");
            System.out.println("1. Make a reservation");
            System.out.println("2. Cancel a reservation");

            int option = scanner.nextInt();

            switch (option) {
                case 1:
                    makeReservation();
                    break;
                case 2:
                    cancelReservation();
                    break;
                default:
                    System.out.println("Invalid option");
                    break;
            }
        } else {
            System.out.println("Invalid login credentials. Access denied!");
        }

        scanner.close();
    }

    private static boolean authenticateUser(String loginId, String password) {
        Connection conn = null;
        PreparedStatement stmt = null;
        ResultSet rs = null;

        try {
            // Register JDBC driver
            Class.forName(JDBC_DRIVER);

            // Open a connection
            System.out.println("Connecting to database...");
            conn = DriverManager.getConnection(DB_URL, USERNAME, PASSWORD);

            // Prepare the authentication query
            String query = "SELECT * FROM users WHERE login_id = ? AND password = ?";
            stmt = conn.prepareStatement(query);
            stmt.setString(1, loginId);
            stmt.setString(2, password);

            // Execute the query
            rs = stmt.executeQuery();

            // Check if the user exists
            if (rs.next()) {
                return true;
            }
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) {
                    rs.close();
                }
                if (stmt != null) {
                    stmt.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

        return false;
    }

    private static void makeReservation() {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Reservation System");
        System.out.print("Enter your name: ");
        String name = scanner.nextLine();

        System.out.print("Enter train number: ");
        String trainNumber = scanner.nextLine();

        System.out.print("Enter class type: ");
        String classType = scanner.nextLine();

        System.out.print("Enter date of journey: ");
        String dateOfJourney = scanner.nextLine();

        System.out.print("Enter starting point: ");
        String startingPoint = scanner.nextLine();

        System.out.print("Enter destination: ");
        String destination = scanner.nextLine();

        Connection conn = null;
        PreparedStatement stmt = null;

        try {
            // Register JDBC driver
            Class.forName(JDBC_DRIVER);

            // Open a connection
            System.out.println("Connecting to database...");
            conn = DriverManager.getConnection(DB_URL, USERNAME, PASSWORD);

            // Prepare the reservation query
            String query = "INSERT INTO reservations (name, train_number, class_type, date_of_journey, starting_point, destination) VALUES (?, ?, ?, ?, ?, ?)";
            stmt = conn.prepareStatement(query);
            stmt.setString(1, name);
            stmt.setString(2, trainNumber);
            stmt.setString(3, classType);
            stmt.setString(4, dateOfJourney);
            stmt.setString(5, startingPoint);
            stmt.setString(6, destination);

            // Execute the query
            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                System.out.println("Reservation successful!");
            } else {
                System.out.println("Failed to make a reservation.");
            }
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

        scanner.close();
    }

    private static void cancelReservation() {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Cancellation Form");
        System.out.print("Enter your PNR number: ");
        String pnrNumber = scanner.nextLine();

        Connection conn = null;
        PreparedStatement stmt = null;

        try {
            // Register JDBC driver
            Class.forName(JDBC_DRIVER);

            // Open a connection
            System.out.println("Connecting to database...");
            conn = DriverManager.getConnection(DB_URL, USERNAME, PASSWORD);

            // Prepare the cancellation query
            String query = "DELETE FROM reservations WHERE pnr_number = ?";
            stmt = conn.prepareStatement(query);
            stmt.setString(1, pnrNumber);

            // Execute the query
            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                System.out.println("Reservation cancelled successfully!");
            } else {
                System.out.println("Failed to cancel the reservation.");
            }
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

        scanner.close();
    }
}
